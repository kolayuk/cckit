// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: cflat.proto

package cflat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *CreateFlatRequest) Validate() error {
	if this.Country == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Country", fmt.Errorf(`value '%v' must not be an empty string`, this.Country))
	}
	if this.Region == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Region", fmt.Errorf(`value '%v' must not be an empty string`, this.Region))
	}
	if this.City == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("City", fmt.Errorf(`value '%v' must not be an empty string`, this.City))
	}
	if this.Street == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Street", fmt.Errorf(`value '%v' must not be an empty string`, this.Street))
	}
	if !(this.HouseNum > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("HouseNum", fmt.Errorf(`value '%v' must be greater than '0'`, this.HouseNum))
	}
	if !(this.FlatNum > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("FlatNum", fmt.Errorf(`value '%v' must be greater than '0'`, this.FlatNum))
	}
	for _, item := range this.Residents {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Residents", err)
			}
		}
	}
	if len(this.Rooms) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Rooms", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Rooms))
	}
	for _, item := range this.Rooms {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Rooms", err)
			}
		}
	}
	return nil
}
func (this *UpdateFlatRequest) Validate() error {
	if len(this.Id) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Id))
	}
	if len(this.Residents) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Residents", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Residents))
	}
	for _, item := range this.Residents {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Residents", err)
			}
		}
	}
	if len(this.Rooms) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Rooms", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Rooms))
	}
	for _, item := range this.Rooms {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Rooms", err)
			}
		}
	}
	return nil
}
func (this *SetFlatResident) Validate() error {
	if this.FirstName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("FirstName", fmt.Errorf(`value '%v' must not be an empty string`, this.FirstName))
	}
	if this.SecondName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("SecondName", fmt.Errorf(`value '%v' must not be an empty string`, this.SecondName))
	}
	return nil
}
func (this *SetFlatRoom) Validate() error {
	if !(this.Area > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Area", fmt.Errorf(`value '%v' must be greater than '0'`, this.Area))
	}
	return nil
}
func (this *FlatView) Validate() error {
	if this.Flat != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Flat); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Flat", err)
		}
	}
	if this.Residents != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Residents); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Residents", err)
		}
	}
	if this.Rooms != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Rooms); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Rooms", err)
		}
	}
	return nil
}
func (this *Flat) Validate() error {
	if len(this.Id) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Id))
	}
	if this.Country == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Country", fmt.Errorf(`value '%v' must not be an empty string`, this.Country))
	}
	if this.Region == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Region", fmt.Errorf(`value '%v' must not be an empty string`, this.Region))
	}
	if this.City == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("City", fmt.Errorf(`value '%v' must not be an empty string`, this.City))
	}
	if this.Street == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Street", fmt.Errorf(`value '%v' must not be an empty string`, this.Street))
	}
	if !(this.HouseNum > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("HouseNum", fmt.Errorf(`value '%v' must be greater than '0'`, this.HouseNum))
	}
	if !(this.FlatNum > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("FlatNum", fmt.Errorf(`value '%v' must be greater than '0'`, this.FlatNum))
	}
	if !(this.Area > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Area", fmt.Errorf(`value '%v' must be greater than '0'`, this.Area))
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *FlatResident) Validate() error {
	if len(this.FlatId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("FlatId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.FlatId))
	}
	if this.FirstName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("FirstName", fmt.Errorf(`value '%v' must not be an empty string`, this.FirstName))
	}
	if this.SecondName == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("SecondName", fmt.Errorf(`value '%v' must not be an empty string`, this.SecondName))
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *FlatRoom) Validate() error {
	if len(this.FlatId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("FlatId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.FlatId))
	}
	if !(this.Area > 0) {
		return github_com_mwitkow_go_proto_validators.FieldError("Area", fmt.Errorf(`value '%v' must be greater than '0'`, this.Area))
	}
	if this.UpdatedAt != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.UpdatedAt); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("UpdatedAt", err)
		}
	}
	return nil
}
func (this *FlatId) Validate() error {
	if len(this.Id) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Id", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Id))
	}
	return nil
}
func (this *Flats) Validate() error {
	for _, item := range this.Flats {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Flats", err)
			}
		}
	}
	return nil
}
func (this *UpdateFlatResidentRequest) Validate() error {
	if len(this.FlatId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("FlatId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.FlatId))
	}
	if len(this.Residents) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Residents", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Residents))
	}
	for _, item := range this.Residents {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Residents", err)
			}
		}
	}
	return nil
}
func (this *FlatResidentId) Validate() error {
	if len(this.FlatId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("FlatId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.FlatId))
	}
	if len(this.ResidentId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("ResidentId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.ResidentId))
	}
	return nil
}
func (this *FlatResidents) Validate() error {
	for _, item := range this.Residents {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Residents", err)
			}
		}
	}
	return nil
}
func (this *UpdateFlatRoomRequest) Validate() error {
	if len(this.FlatId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("FlatId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.FlatId))
	}
	if len(this.Rooms) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("Rooms", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.Rooms))
	}
	for _, item := range this.Rooms {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Rooms", err)
			}
		}
	}
	return nil
}
func (this *FlatRoomId) Validate() error {
	if len(this.FlatId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("FlatId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.FlatId))
	}
	if len(this.RoomId) < 1 {
		return github_com_mwitkow_go_proto_validators.FieldError("RoomId", fmt.Errorf(`value '%v' must contain at least 1 elements`, this.RoomId))
	}
	return nil
}
func (this *FlatRooms) Validate() error {
	for _, item := range this.Rooms {
		if item != nil {
			if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(item); err != nil {
				return github_com_mwitkow_go_proto_validators.FieldError("Rooms", err)
			}
		}
	}
	return nil
}
func (this *FlatCreated) Validate() error {
	return nil
}
func (this *FlatDeleted) Validate() error {
	if this.Residents != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Residents); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Residents", err)
		}
	}
	if this.Rooms != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Rooms); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Rooms", err)
		}
	}
	return nil
}
func (this *FlatUpdated) Validate() error {
	return nil
}
func (this *FlatResidentsUpdated) Validate() error {
	if this.Residents != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Residents); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Residents", err)
		}
	}
	return nil
}
func (this *FlatResidentsDeleted) Validate() error {
	return nil
}
func (this *FlatRoomsUpdated) Validate() error {
	if this.Rooms != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Rooms); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Rooms", err)
		}
	}
	return nil
}
func (this *FlatRoomsDeleted) Validate() error {
	return nil
}
